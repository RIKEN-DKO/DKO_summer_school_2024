# Prefixes define shorthand notations for URIs, making the query more readable.
PREFIX owl: <http://www.w3.org/2002/07/owl#>  # Web Ontology Language - defines classes, properties, and individuals
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>  # RDF Schema - provides basic elements for describing ontologies
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  # RDF Syntax - defines the RDF data model
PREFIX foaf: <http://xmlns.com/foaf/0.1/>  # Friend of a Friend - describes persons, their activities, and their relations to other people and objects
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>  # Simple Knowledge Organization System - used for knowledge organization systems like thesauri and taxonomies
PREFIX dc: <http://purl.org/dc/elements/1.1/>  # Dublin Core - standard for cross-domain resource description
PREFIX dcterms: <http://purl.org/dc/terms/>  # Dublin Core Terms - provides additional properties and classes for resource description
PREFIX dbo: <http://dbpedia.org/ontology/>  # DBpedia Ontology - provides structured data extracted from Wikipedia
PREFIX dbp: <http://dbpedia.org/property/>  # DBpedia Properties - properties used in DBpedia data

# The SELECT clause specifies the variables we want to retrieve.
SELECT DISTINCT ?term ?type ?label
###<FROM>###
WHERE {
  # UNION clause combines different conditions for selecting terms.
  {
    ?term a owl:Class.  # Check if the term is an owl:Class
    BIND("class" AS ?type)  # Bind the string "class" to the variable ?type
  }
  UNION
  {
    ?term a rdfs:Class.  # Check if the term is an rdfs:Class
    BIND("class" AS ?type)  # Bind the string "class" to the variable ?type
  }
  UNION
  {
    ?term a rdf:Property.  # Check if the term is an rdf:Property
    BIND("property" AS ?type)  # Bind the string "property" to the variable ?type
  }
  UNION
  {
    ?term a owl:DatatypeProperty.  # Check if the term is an owl:DatatypeProperty
    BIND("property" AS ?type)  # Bind the string "property" to the variable ?type
  }
  UNION
  {
    ?term a owl:ObjectProperty.  # Check if the term is an owl:ObjectProperty
    BIND("property" AS ?type)  # Bind the string "property" to the variable ?type
  }

  # OPTIONAL clause tries to get a human-readable label for the term.
  OPTIONAL {
    ?term ?property ?label1.
    FILTER(
      ?property IN (rdfs:label, foaf:name, skos:prefLabel, dc:title, dcterms:title, dbo:name, dbp:name)
    )
  }

  # BIND function assigns a value to ?label. If ?label1 is found, it uses that; otherwise, it uses the term itself.
  BIND(COALESCE(?label1, STR(?term)) AS ?label)
}#LIMIT 100
